"""
API Data Models for MyBank

Pydantic models for API request/response validation.
Generated by Code Agent
"""
from datetime import datetime
from decimal import Decimal
from typing import Optional, List, Dict, Any
from pydantic import BaseModel, Field, validator


class BaseResponse(BaseModel):
    """Base response model."""
    success: bool
    message: str
    timestamp: datetime = Field(default_factory=datetime.now)


class TransactionRequest(BaseModel):
    """Transaction request model."""
    customer_id: str = Field(..., description="Customer identifier")
    amount: Decimal = Field(..., gt=0, description="Transaction amount")
    currency: str = Field(default="USD", description="Currency code")
    merchant: str = Field(..., description="Merchant name")
    description: Optional[str] = Field(None, description="Transaction description")
    metadata: Optional[Dict[str, Any]] = Field(default_factory=dict)


class TransactionResponse(BaseResponse):
    """Transaction response model."""
    transaction_id: Optional[str] = None
    status: Optional[str] = None
    authorization_code: Optional[str] = None


class PaymentRequest(BaseModel):
    """Payment processing request."""
    from_account: str = Field(..., description="Source account")
    to_account: str = Field(..., description="Destination account")
    amount: Decimal = Field(..., gt=0, description="Payment amount")
    payment_method: str = Field(..., description="Payment method")
    reference: Optional[str] = Field(None, description="Payment reference")


class PaymentResponse(BaseResponse):
    """Payment processing response."""
    payment_id: Optional[str] = None
    status: Optional[str] = None
    confirmation_code: Optional[str] = None
